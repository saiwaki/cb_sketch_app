{"version":3,"sources":["components/FallbackState/artboard.svg","components/FallbackState/warning.svg","polyfills.js","serviceWorker.js","redux/modules/connection/reducer.js","redux/actionTypes.js","redux/modules/entities/artboards/artboards.js","redux/modules/entities/documents/documents.js","redux/modules/entities/pages/pages.js","redux/modules/entities/layers/layers.js","redux/modules/entities/index.js","utils/incOrDefaultToZero.js","redux/modules/revisions/reducer.js","redux/modules/screen/reducer.js","redux/modules/hitAreas/reducer.js","redux/modules/manifest/reducer.js","redux/rootReducer.js","redux/configureStore.js","components/Websockets/socketEventTypes.js","components/Websockets/SocketDispatcher.js","components/Websockets/SocketConnection.js","components/Websockets/Subscribe.js","components/Websockets/withSocket.js","redux/modules/connection/actions.js","utils/globalizeSelectors.js","redux/modules/connection/selectors.js","redux/modules/revisions/actions.js","redux/normalizers/manifest.js","redux/modules/manifest/actions.js","utils/getBrowserName.js","containers/ConnectionManager/ConnectionManager.js","components/HitArea/HitArea.js","redux/modules/entities/layers/selectors.js","redux/modules/hitAreas/selectors.js","redux/modules/screen/selectors.js","utils/floatsToCSSRGBAString.js","containers/HitArea/selectors.js","containers/HitArea/HitArea.js","redux/modules/entities/artboards/selectors.js","containers/FlowView/selectors.js","config.js","utils/createArtboardUrl.js","redux/modules/revisions/selectors.js","containers/PrefetchArtboardImages/selectors.js","components/sketch-frontend-common/IOSTransition.js","components/sketch-frontend-common/ArtboardsTransition.js","components/sketch-frontend-common/Viewport.js","components/sketch-frontend-common/Artboard.js","components/sketch-frontend-common/withIsBack.js","components/FallbackState/FallbackState.js","utils/isSketchWebView.js","utils/createSrcSet.js","containers/AddGlobalTransitionToArtboardHandler/AddGlobalTransitionToArtboardHandler.js","utils/loadImage.js","components/FetchImage/FetchImage.js","containers/PrefetchArtboardImages/PrefetchArtboardImages.js","containers/FlowView/FlowView.js","redux/modules/screen/actions.js","redux/modules/manifest/selectors.js","constants/localizedStrings.js","containers/LocalizedStringsManager/LocalizedStringsContext.js","containers/LocalizedStringsManager/LocalizedStringsProvider.js","containers/LocalizedStringsManager/LocalizedStringsConsumer.js","containers/LocalizedStringsManager/withLocalizedStrings.js","utils/getLocalizedString.js","containers/App/App.js","globalStyles.js","index.js","globalProperties.js"],"names":["module","exports","Promise","require","enable","window","Object","assign","Boolean","location","hostname","match","handleActions","state","payload","connected","token","manifestLoaded","actions","artboardId","dispatch","getState","replace","pathname","transitionType","canGoBack","action","byId","entities","artboards","documents","pages","layers","combineReducers","R","Number","incRevisionForArtboardId","incOrDefaultToZero","artboardIds","LOCATION_CHANGE","scrollbarDimensions","color","result","manifestIsSet","connection","router","routerReducer","revisions","screen","hitAreas","manifest","composeEnhancers","composeWithDevTools","SocketEventTypes","OPEN","CLOSE","MESSAGE","ERROR","SocketDispatcher","uri","onClose","e","broadcast","onOpen","onError","onMessage","msg","send","socket","readyState","WebSocket","error","console","warn","this","listeners","sockets","connect","bind","close","fn","push","type","CLOSED","indexOf","splice","forEach","listener","removeEventListener","addEventListener","onclose","sock","last","SocketConnection","props","socketDispatcher","nextProps","React","Children","only","children","Component","childContextTypes","PropTypes","instanceOf","isRequired","Subscribe","context","socketListener","event","handler","warning","propNames","propKeys","keys","map","x","includes","propsDefined","socketEvent","data","JSON","parse","subscribe","unsubscribe","contextTypes","MyComponent","setState","prevState","localStateTransform","selectors","transform","selector","curryN","length","args","adjust","globalizeSelectors","getConnectionIsReady","getToken","layer","schema","Entity","idAttribute","value","parent","key","id","processStrategy","artboard","page","document","flowColor","m","meta","documentSchema","BROWSER_NAME_MAPPING","edge","chrome","crios","firefox","opera","ie","android","ios","safari","getPrettyBrowserName","name","browser","ConnectionManager","initConnection","uuid","localStorage","getItem","generateUUID","setItem","sendDeviceInfo","content","navigator","userAgent","getBrowserName","challenge","queryString","search","screens","scale","devicePixelRatio","width","height","stringify","handleOpen","handleClose","closeConnection","setTimeout","handleError","handleManifestUpdate","updateManifest","handleArtboardUpdate","identifier","updateArtboard","handleConnectionSuccess","connectionSuccess","handleUpdateCurrentArtboard","updateCurrentArtboard","process","withSocket","ownProps","connectionActions","manifestActions","revisionActions","artboardActions","HitArea","styled","div","attrs","style","top","right","bottom","left","backgroundColor","transparentize","isActive","propTypes","string","defaultProps","localState","getLayer","getDestinationArtboardId","getColor","getScalingMode","scalingMode","getIsScrollbarDimensionsSet","getScrollbarDimensions","getShouldHideScrollbars","getCanGoBack","mapIndexed","mapTo255","Math","floor","toRGBA","i","predicate","0","1","2","3","Array","isArray","floatsToCSSRGBAString","rgba","px","getHitAreaDetails","createSelector","layerSelectors","layerId","hitAreaSelectors","screenSelectors","flow","ceil","boundingRect","y","goToArtboard","animationType","keepParentScrollPosition","fromArtboardId","params","toArtboardId","stopPropagation","enhance","withProps","onMouseDown","onTouchStart","withHandlers","onClick","goToPreviousArtboard","isBackAction","destinationArtboardID","branch","renderNothing","withRouter","goBack","getArtboard","getLayers","getArtboards","artboardsById","getViewport","getArtboardFileTypes","getRelatedArtboardIds","currentArtboardId","relatedArtboardIds","getLayersForArtboard","filter","idOrNull","artboardSelectors","mirrorPort","parseInt","port","socketUri","fileServerUri","createArtboardUrl","selectedArtboardId","revision","config","getArtboardRevision","getUrlsForArtboardIdByType","revisionSelectors","fileTypes","reduce","urlsByType","fileType","Wrapper","Transition","CSSTransition","IOSTransition","transition","transitionKey","TransitionGroup","childFactory","child","cloneElement","classNames","timeout","PureComponent","shallowDiffers","a","b","isNoneTransition","omitChildrenProp","reversed","fromRight","fromLeft","fromTop","fromBottom","none","ArtboardsTransition","previousTransition","updatePreviousTransition","isBack","Container","Viewport","ScrollContainer","hideScrollbars","FixedArea","ContentsArea","Artboard","viewportWidth","viewportHeight","contentsWidth","contentsHeight","scrollbarWidth","scrollbarHeight","hideScrollbarsOnWebkit","fixedChildren","scrollContainerRef","finalViewportWidth","finalViewportHeight","innerRef","withIsBack","WrappedComponent","backFrom","historySinceEnter","history","lastHistoryIndex","previousLocationKey","pop","prototypeHistory","Title","h1","Message","p","StyledImg","img","Icon","src","WarningIcon","alt","ArtboardIcon","FallbackState","title","message","iconType","toLowerCase","createSrcSet","imageUrls","url","join","noop","AddGlobalTransitionToArtboardHandler","transitionToArtboard","destinationArtboardId","loadImage","srcSet","resolve","reject","image","Image","srcset","FetchImage","promise","fetchImage","urls","full","scrollable","fixed","arr","toClass","calculateScale","containerWidth","containerHeight","values","smallest","compose","withState","flashHitareas","setHitAreasAreActive","hitAreasAreActive","isSketchWebView","viewport","shouldHideScrollbars","artboardUrls","setCurrentArtboard","withContentRect","measureRef","contentRect","scrollableArtboardUrls","fixedViewportUrls","rest","artboardRefs","useRef","artboardScroll","previousLocation","slice","useEffect","savedArtboardRef","current","scrollLevel","previousElementScroll","scrollTo","scrollLevels","scrollTop","webkit","messageHandlers","artboardDidChange","postMessage","entry","innerWidth","innerHeight","addScrollbarDimensions","calculateViewport","keyEventName","KEYDOWN","keyValue","onKeyHandle","KEYUP","ref","Fragment","draggable","l","isFixedToViewport","maintainScrollPosition","getManifestIsSet","NO_ARTBOARDS_TITLE","NO_ARTBOARDS_MESSAGE","CONNECTION_ERROR_TITLE","CONNECTION_ERROR_MESSAGE","LocalizedStringsContext","createContext","LocalizedStringsProvider","localizedStrings","defaultLocalizedStrings","setLocalizedStrings","stringsObj","Provider","withLocalizedStrings","LocalizedStringsConsumer","getLocalizedString","strings","NoArtboardsFallbackState","ConnectionErrorFallbackState","App","connectionIsReady","setScrollbarDimensions","isScrollbarDimensionsSet","goToConnectionError","documentContainsArtboards","onLoad","Switch","Route","path","component","FlowView","render","connectionSelectors","manifestSelectors","artboardsSelectors","measurements","screenActions","injectGlobal","__RELEASE_INFO","commit","getHistoryState","newState","random","toString","substr","replaceState","href","store","createBrowserHistory","middleware","applyMiddleware","thunk","normalizrMiddleware","routerMiddleware","createStore","rootReducer","configureStore","isUUID","anyNonNil","getSessionId","obj","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14b14679.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/artboard.ca47a092.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.a2fb0bb8.svg\";","if (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable()\n  window.Promise = require('promise/lib/es6-extensions.js')\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch')\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign')\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\n\nexport const getInitialState = () => ({\n  connected: false,\n  token: null,\n  manifestLoaded: false\n})\n\nexport default handleActions(\n  {\n    [ActionTypes.CONNECTION_SUCCESS]: (state, { payload }) => {\n      return { ...state, connected: true, token: payload.token }\n    },\n    [ActionTypes.CONNECTION_CLOSED]: state => {\n      return { ...getInitialState() }\n    },\n    [ActionTypes.UPDATE_MANIFEST]: state => {\n      return { ...state, manifestLoaded: true }\n    }\n  },\n  getInitialState()\n)\n","/**\n * Any new action type should be added to the set of exports below.\n *\n * Please keep this list alphabetized.\n */\n\nexport const CONNECTION_INIT = 'CONNECTION_INIT'\nexport const CONNECTION_SUCCESS = 'CONNECTION_SUCCESS'\nexport const CONNECTION_CLOSED = 'CONNECTION_CLOSED'\n\nexport const UPDATE_MANIFEST = 'UPDATE_MANIFEST'\n\nexport const SET_SCALING_MODE = 'SET_SCALING_MODE'\n\nexport const INCREASE_ARTBOARD_REVISION = 'INCREASE_ARTBOARD_REVISION'\n\nexport const SET_SCROLLBAR_DIMENSIONS = 'SET_SCROLLBAR_DIMENSIONS'\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\nimport { replace } from 'react-router-redux'\n\nconst getInitialState = () => ({\n  byId: {}\n})\n\nconst setCurrentArtboard = artboardId => (dispatch, getState) => {\n  dispatch(\n    replace({\n      pathname: `/${artboardId}`,\n      state: { transitionType: 'none', canGoBack: false }\n    })\n  )\n}\n\nexport const actions = {\n  setCurrentArtboard\n}\n\nexport default handleActions(\n  {\n    [ActionTypes.UPDATE_MANIFEST]: (state, action) => {\n      return { byId: action.payload.entities.artboards }\n    }\n  },\n  getInitialState()\n)\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\n\nconst getInitialState = () => ({\n  byId: {}\n})\n\nexport default handleActions(\n  {\n    [ActionTypes.UPDATE_MANIFEST]: (state, action) => {\n      return { byId: action.payload.entities.documents }\n    }\n  },\n  getInitialState()\n)\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\n\nconst getInitialState = () => ({\n  byId: {}\n})\n\nexport default handleActions(\n  {\n    [ActionTypes.UPDATE_MANIFEST]: (state, action) => {\n      return { byId: action.payload.entities.pages }\n    }\n  },\n  getInitialState()\n)\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\n\nconst getInitialState = () => ({\n  byId: {}\n})\n\nexport default handleActions(\n  {\n    [ActionTypes.UPDATE_MANIFEST]: (state, action) => {\n      return { byId: action.payload.entities.layers }\n    }\n  },\n  getInitialState()\n)\n","import { combineReducers } from 'redux'\nimport artboards from './artboards'\nimport documents from './documents'\nimport pages from './pages'\nimport layers from './layers'\n\nexport default combineReducers({\n  artboards,\n  documents,\n  pages,\n  layers\n})\n","import * as R from 'ramda'\n\nexport default R.ifElse(R.is(Number), R.inc, R.always(0))\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\nimport * as R from 'ramda'\nimport incOrDefaultToZero from 'utils/incOrDefaultToZero'\n\nexport const incRevisionForArtboardId = R.curry((artboardId, state) =>\n  R.over(R.lensPath(['artboards', artboardId]), incOrDefaultToZero, state)\n)\n\nexport const getInitialState = () => ({ artboards: {} })\n\nexport default handleActions(\n  {\n    [ActionTypes.UPDATE_MANIFEST]: (state, action) => {\n      const artboardIds = R.keys(action.payload.entities.artboards)\n      return R.reduce(R.flip(incRevisionForArtboardId), state, artboardIds)\n    },\n    [ActionTypes.INCREASE_ARTBOARD_REVISION]: (state, action) => {\n      const artboardId = action.payload\n      return incRevisionForArtboardId(artboardId, state)\n    }\n  },\n  getInitialState()\n)\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\nimport * as R from 'ramda'\nimport { LOCATION_CHANGE } from 'react-router-redux'\n\nexport const getInitialState = () => ({\n  scrollbarDimensions: null,\n  canGoBack: false\n})\n\nexport default handleActions(\n  {\n    [ActionTypes.SET_SCROLLBAR_DIMENSIONS]: (state, { payload }) => {\n      return R.set(R.lensProp('scrollbarDimensions'), payload, state)\n    },\n    [LOCATION_CHANGE]: (state, { payload }) => {\n      if (payload && payload.state && payload.state.canGoBack === false) {\n        return R.set(R.lensProp('canGoBack'), false, state)\n      }\n\n      return R.set(R.lensProp('canGoBack'), true, state)\n    }\n  },\n  getInitialState()\n)\n","import { handleActions } from 'redux-actions'\nimport * as ActionTypes from 'redux/actionTypes'\nimport * as R from 'ramda'\n\nexport const getInitialState = () => ({ color: null })\n\nexport default handleActions(\n  {\n    [ActionTypes.UPDATE_MANIFEST]: (state, action) => {\n      const flowColor = R.pathOr(\n        null,\n        [\n          'payload',\n          'entities',\n          'documents',\n          action.payload.result,\n          'flowColor'\n        ],\n        action\n      )\n\n      return {\n        color: flowColor\n      }\n    }\n  },\n  getInitialState()\n)\n","import * as ActionTypes from 'redux/actionTypes'\nimport { handleActions } from 'redux-actions'\n\nexport const getInitialState = () => ({\n  manifestIsSet: false\n})\n\nexport default handleActions(\n  {\n    [ActionTypes.UPDATE_MANIFEST]: (state, { payload }) => {\n      return { ...state, manifestIsSet: true }\n    }\n  },\n  getInitialState()\n)\n","import { combineReducers } from 'redux'\nimport { routerReducer } from 'react-router-redux'\nimport connection from 'redux/modules/connection/reducer'\nimport entities from 'redux/modules/entities'\nimport revisions from 'redux/modules/revisions/reducer'\nimport screen from 'redux/modules/screen/reducer'\nimport hitAreas from 'redux/modules/hitAreas/reducer'\nimport manifest from 'redux/modules/manifest/reducer'\n\nexport default combineReducers({\n  connection,\n  entities,\n  router: routerReducer,\n  revisions,\n  screen,\n  hitAreas,\n  manifest\n})\n","import { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport normalizrMiddleware from 'redux-normalizr3-middleware'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { routerMiddleware } from 'react-router-redux'\nimport rootReducer from './rootReducer'\n\nconst composeEnhancers = composeWithDevTools({})\n\nexport default function configureStore({ history }) {\n  const middleware = composeEnhancers(\n    applyMiddleware(thunk, normalizrMiddleware(), routerMiddleware(history))\n  )\n\n  return createStore(rootReducer, middleware)\n}\n","const SocketEventTypes = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  MESSAGE: 'message',\n  ERROR: 'error'\n}\n\nexport default SocketEventTypes\n","import SocketEventTypes from './socketEventTypes'\nimport { last } from 'ramda'\n\n/**\n * `SocketDispatcher` is used as an intermediate layer for the WebSocket connection.\n * Can be used to subscribe to WebSocket events and send messages to the WebSocket server.\n */\nclass SocketDispatcher {\n  constructor(uri) {\n    this.uri = uri\n    this.listeners = []\n    this.sockets = []\n\n    this.connect = this.connect.bind(this)\n    this.close = this.close.bind(this)\n  }\n\n  subscribe(fn) {\n    this.listeners.push(fn)\n\n    if (this.socket && this.socket instanceof window.WebSocket) {\n      switch (this.socket.readyState) {\n        case window.WebSocket.OPEN:\n          fn({ type: SocketEventTypes.OPEN })\n          break\n        case window.WebSocket.CLOSED:\n          fn({ type: SocketEventTypes.CLOSE })\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  unsubscribe(fn) {\n    if (this.listeners.indexOf(fn) > -1) {\n      this.listeners.splice(this.listeners.indexOf(fn), 1)\n    }\n  }\n\n  broadcast(e) {\n    this.listeners.forEach(listener => {\n      listener(e)\n    })\n  }\n\n  close() {\n    if (this.socket && this.socket instanceof window.WebSocket) {\n      try {\n        this.socket.removeEventListener('close', this.onClose)\n        this.socket.removeEventListener('open', this.onOpen)\n        this.socket.removeEventListener('error', this.onError)\n        this.socket.removeEventListener('message', this.onMessage)\n\n        this.socket.close()\n      } catch (e) {\n        console.warn('Could not close connection', e)\n      }\n    }\n  }\n\n  set socket(sock) {\n    this.sockets.push(sock)\n  }\n\n  get socket() {\n    return last(this.sockets)\n  }\n\n  connect() {\n    if (!this.uri) {\n      console.warn(`Can't set up connection because no URI was provided`)\n      return\n    }\n\n    this.close()\n    this.socket = new window.WebSocket(this.uri)\n\n    // attach events\n    this.socket.addEventListener('close', this.onClose)\n    this.socket.addEventListener('open', this.onOpen)\n    this.socket.addEventListener('error', this.onError)\n    this.socket.addEventListener('message', this.onMessage)\n\n    this.socket.onclose = function() {}\n  }\n\n  onClose = e => {\n    this.broadcast(e)\n  }\n\n  onOpen = e => {\n    this.broadcast(e)\n  }\n\n  onError = e => {\n    this.broadcast(e)\n  }\n\n  onMessage = msg => {\n    this.broadcast(msg)\n  }\n\n  send = msg => {\n    if (!this.socket || this.socket.readyState !== window.WebSocket.OPEN) return\n\n    try {\n      this.socket.send(msg)\n    } catch (error) {\n      console.warn(`Couldn't send message`)\n    }\n  }\n}\n\nexport default SocketDispatcher\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport SocketDispatcher from './SocketDispatcher'\n\n/**\n * Sets up WebSocket connection using `SocketDispatcher` and makes an instance\n * of `SocketDispatcher` available to `withSocket()` calls in the component hierarchy below.\n */\nclass SocketConnection extends Component {\n  constructor(props) {\n    super(props)\n    this.socketDispatcher = new SocketDispatcher(props.uri)\n  }\n\n  getChildContext() {\n    return { socketDispatcher: this.socketDispatcher }\n  }\n\n  componentDidMount() {\n    this.socketDispatcher.connect()\n  }\n\n  componentWillUnmount() {\n    this.socketDispatcher.close()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.uri !== nextProps.uri) {\n      this.socketDispatcher.uri = nextProps.uri\n      this.socketDispatcher.connect()\n    }\n  }\n\n  render() {\n    return React.Children.only(this.props.children)\n  }\n}\n\nSocketConnection.propTypes = {\n  uri: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired\n}\n\nSocketConnection.childContextTypes = {\n  socketDispatcher: PropTypes.instanceOf(SocketDispatcher).isRequired\n}\n\nexport default SocketConnection\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport SocketDispatcher from './SocketDispatcher'\nimport SocketEventTypes from './socketEventTypes'\nimport warning from 'warning'\nimport * as R from 'ramda'\n\nconst propsDefined = (props = {}, propNames = []) => {\n  const propKeys = Object.keys(props)\n  return R.all(R.equals(true), propNames.map(x => propKeys.includes(x)))\n}\n\n/**\n * The `Subscribe` component can be used to listen for events from the socket connection provided by `SocketConnection`.\n *\n * Example usage:\n * ```\n * class SomeComponent extends React.Component {\n *  handleManifest(socketEvent) {\n *    // do something with the socketEvent\n *    socketEvent.type === 'manifest' // true\n *  }\n *\n *  render() {\n *    return <Subscribe event=\"manifest\" handler={this.handleManifest} />\n *  }\n * }\n * ```\n */\nclass Subscribe extends Component {\n  static propTypes = {\n    /** Specifies which event to listen for. WebSocket events should provide a type property. */\n    event: PropTypes.string,\n    /** An event listener to be called when the specified event matches the type of the socket event. */\n    handler: PropTypes.func,\n    /** An event listener to be called when a message is received from the server. */\n    onMessage: PropTypes.func,\n    /** An event listener to be called when the WebSocket's connection `readyState` changes to `OPEN`. */\n    onOpen: PropTypes.func,\n    /** An event listener to be called when the WebSocket's connection `readyState` changes to `CLOSED`. */\n    onClose: PropTypes.func,\n    /** An event listener to be called when an error occurs. */\n    onError: PropTypes.func\n  }\n\n  static contextTypes = {\n    socketDispatcher: PropTypes.instanceOf(SocketDispatcher)\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.socketListener = this.socketListener.bind(this)\n\n    if (props.event || props.handler) {\n      warning(\n        propsDefined(props, ['event', 'handler']),\n        '[Subscribe] provide both event and handler props'\n      )\n    }\n  }\n\n  socketListener(socketEvent) {\n    const { event, handler } = this.props\n\n    if (socketEvent.type === SocketEventTypes.MESSAGE && handler) {\n      let data\n\n      try {\n        data = JSON.parse(socketEvent.data)\n      } catch (e) {\n        console.error(`[Subscribe] error while parsing socket event`, e)\n      }\n\n      if (data && event === data.type) {\n        handler(data)\n      }\n    }\n\n    if (socketEvent.type === SocketEventTypes.MESSAGE && this.props.onMessage) {\n      this.props.onMessage(socketEvent)\n    }\n\n    if (socketEvent.type === SocketEventTypes.OPEN && this.props.onOpen) {\n      this.props.onOpen(socketEvent)\n    }\n\n    if (socketEvent.type === SocketEventTypes.CLOSE && this.props.onClose) {\n      this.props.onClose(socketEvent)\n    }\n\n    if (socketEvent.type === SocketEventTypes.ERROR && this.props.onError) {\n      this.props.onError(socketEvent)\n    }\n  }\n\n  componentDidMount() {\n    this.context.socketDispatcher.subscribe(this.socketListener)\n  }\n\n  componentWillUnmount() {\n    this.context.socketDispatcher.unsubscribe(this.socketListener)\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default Subscribe\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport SocketDispatcher from './SocketDispatcher'\nimport SocketEventTypes from './socketEventTypes'\n\n/**\n * Connects a React component to the `SocketDispatcher` instance provided by the `SocketConnection` component.\n */\nconst connect = MyComponent => {\n  return class Connected extends Component {\n    static contextTypes = {\n      socketDispatcher: PropTypes.instanceOf(SocketDispatcher)\n    }\n\n    state = {\n      readyState: window.WebSocket.CLOSED\n    }\n\n    constructor(props, context) {\n      super(props, context)\n\n      this.socketListener = this.socketListener.bind(this)\n    }\n\n    socketListener(event) {\n      switch (event.type) {\n        case SocketEventTypes.OPEN:\n          this.setState(prevState => ({\n            ...prevState,\n            readyState: window.WebSocket.OPEN\n          }))\n          break\n        case SocketEventTypes.CLOSE:\n          this.setState(prevState => ({\n            ...prevState,\n            readyState: window.WebSocket.CLOSED\n          }))\n          break\n        default:\n          break\n      }\n    }\n\n    componentDidMount() {\n      this.context.socketDispatcher.subscribe(this.socketListener)\n    }\n\n    componentWillUnmount() {\n      this.context.socketDispatcher.unsubscribe(this.socketListener)\n    }\n\n    render() {\n      return (\n        <MyComponent\n          {...this.props}\n          socketDispatcher={this.context.socketDispatcher}\n          readyState={this.state.readyState}\n        />\n      )\n    }\n  }\n}\n\nexport default connect\n","import * as ActionTypes from 'redux/actionTypes'\n\nconst success = token => ({\n  type: ActionTypes.CONNECTION_SUCCESS,\n  payload: {\n    token\n  }\n})\n\nconst close = token => ({\n  type: ActionTypes.CONNECTION_CLOSED\n})\n\nexport default {\n  success,\n  close\n}\n","import { adjust, curryN, length, map } from 'ramda'\n\nconst globalize = transform => selector =>\n  curryN(length(selector), (...args) =>\n    selector(...adjust(transform, -1, args))\n  )\n\nexport default (localStateTransform, selectors) =>\n  map(globalize(localStateTransform), selectors)\n","import * as R from 'ramda'\nimport globalizeSelectors from 'utils/globalizeSelectors'\n\nconst localState = R.path(['connection'])\n\nexport const getConnectionIsReady = state =>\n  state.connected && state.manifestLoaded\n\nexport const getToken = state => R.propOr(null, 'token', state)\n\nexport default globalizeSelectors(localState, {\n  getConnectionIsReady,\n  getToken\n})\n","import * as ActionTypes from 'redux/actionTypes'\n\nconst increaseArtboardRevision = artboardId => {\n  return {\n    payload: artboardId,\n    type: ActionTypes.INCREASE_ARTBOARD_REVISION\n  }\n}\n\nexport const actions = {\n  increaseArtboardRevision\n}\n","import * as R from 'ramda'\nimport { schema } from 'normalizr'\n\n/**\n * A Layer requires this generated id because a manifest can contain multiple Layers with the same uuid.\n * This happens with symbols which share the same Layer having a flow.\n * In this case we use a combined id which is derived from the parent id (Symbol or Artboard id),\n * the Layer id itself and the index of the Layer in the array of Layers a Symbol or Artboard can have.\n * The index is necessary because an Artboard can have more than 1 instance of the same symbol, if\n * that is the case the Artboard id and Layer id will be the same.\n * This generated id is purely based on info from the manifest and should always be the same if re-generated.\n */\nconst layer = new schema.Entity(\n  'layers',\n  {},\n  {\n    idAttribute: (value, parent, key) =>\n      `${parent.id}-${value.id}-${parent[key].indexOf(value)}`,\n    processStrategy: (value, parent, key) =>\n      R.set(\n        R.lensProp('id'),\n        `${parent.id}-${value.id}-${parent[key].indexOf(value)}`,\n        value\n      )\n  }\n)\n\nconst artboard = new schema.Entity('artboards', {\n  layers: [layer]\n})\n\nconst page = new schema.Entity('pages', {\n  artboards: [artboard]\n})\n\nexport const document = new schema.Entity(\n  'documents',\n  {\n    pages: [page]\n  },\n  {\n    idAttribute: value => {\n      return value.manifest.id\n    },\n    processStrategy: (value, parent, key) => {\n      const pages = R.pathOr([], ['manifest', 'contents', 'pages'], value)\n      const flowColor = R.pathOr(null, ['manifest', 'flowColor'], value)\n\n      return {\n        flowColor,\n        pages\n      }\n    }\n  }\n)\n","import * as ActionTypes from 'redux/actionTypes'\nimport { document as documentSchema } from 'redux/normalizers/manifest'\n\nconst updateManifest = m => ({\n  type: ActionTypes.UPDATE_MANIFEST,\n  payload: {\n    manifest: m\n  },\n  meta: {\n    schema: documentSchema\n  }\n})\n\nexport const actions = {\n  updateManifest\n}\n","import * as R from 'ramda'\nimport browser from 'detect-browser'\n\nconst BROWSER_NAME_MAPPING = {\n  edge: 'Edge',\n  chrome: 'Chrome',\n  crios: 'Chrome iOS',\n  firefox: 'Firefox',\n  opera: 'Opera',\n  ie: 'Internet Explorer',\n  android: 'Android',\n  ios: 'iOS',\n  safari: 'Safari'\n}\n\nexport const getBrowserName = () => (browser ? browser.name : 'Unknown')\n\nexport const getPrettyBrowserNamePure = name =>\n  R.propOr(name, name, BROWSER_NAME_MAPPING)\n\nexport const getPrettyBrowserName = () =>\n  getPrettyBrowserNamePure(getBrowserName())\n\nexport default getPrettyBrowserName\n","import React, { Component } from 'react'\nimport { withSocket, Subscribe } from 'components/Websockets'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\nimport { v4 as generateUUID } from 'uuid'\nimport queryString from 'query-string'\nimport { actions as connectionActions } from 'redux/modules/connection'\nimport { actions as revisionActions } from 'redux/modules/revisions/actions'\nimport { actions as manifestActions } from 'redux/modules/manifest/actions'\nimport { actions as artboardActions } from 'redux/modules/entities/artboards'\nimport getBrowserName from 'utils/getBrowserName'\n\nconst mapStateToProps = state => ({\n  connected: state.connection.connected\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  connectionSuccess: token => dispatch(connectionActions.success(token)),\n  updateManifest: manifest =>\n    dispatch(manifestActions.updateManifest(manifest)),\n  updateArtboard: artboardId =>\n    dispatch(revisionActions.increaseArtboardRevision(artboardId)),\n  updateCurrentArtboard: artboardId =>\n    dispatch(artboardActions.setCurrentArtboard(artboardId)),\n  closeConnection: () => {\n    dispatch(connectionActions.close())\n  }\n})\n\nclass ConnectionManager extends Component {\n  componentDidMount() {\n    this.initConnection()\n  }\n\n  initConnection = () => {\n    let uuid = localStorage.getItem('uuid')\n\n    if (!uuid) {\n      uuid = generateUUID()\n      localStorage.setItem('uuid', uuid)\n    }\n\n    this.setState({\n      uuid\n    })\n  }\n\n  sendDeviceInfo = () => {\n    const { socketDispatcher } = this.props\n    const { uuid } = this.state\n\n    const msg = {\n      type: 'device-info',\n      content: {\n        uuid,\n        'user-agent': window.navigator.userAgent,\n        'display-name': getBrowserName(),\n        challenge: queryString.parse(window.location.search).challenge,\n        screens: [\n          {\n            name: 'Browser',\n            scale: window.devicePixelRatio,\n            width: window.screen.width,\n            height: window.screen.height\n          }\n        ]\n      }\n    }\n\n    socketDispatcher.send(JSON.stringify(msg))\n  }\n\n  connect = () => {\n    if (!this.props.connected) this.props.socketDispatcher.connect()\n  }\n\n  handleOpen = () => {\n    this.sendDeviceInfo()\n  }\n\n  handleClose = () => {\n    this.props.closeConnection()\n    setTimeout(this.connect, 5000)\n  }\n\n  handleError = () => {\n    this.props.handleError()\n  }\n\n  handleManifestUpdate = e => {\n    this.props.updateManifest(e.content)\n  }\n\n  handleArtboardUpdate = e => {\n    if (R.isNil(e.content.identifier)) return\n\n    this.props.updateArtboard(e.content.identifier)\n  }\n\n  handleConnectionSuccess = e => {\n    this.props.connectionSuccess(e.content.token)\n  }\n\n  handleUpdateCurrentArtboard = e => {\n    if (R.isNil(e.content.identifier)) return\n\n    this.props.updateCurrentArtboard(e.content.identifier)\n  }\n\n  render() {\n    return (\n      <div>\n        <Subscribe onOpen={this.handleOpen} />\n        <Subscribe onClose={this.handleClose} />\n        <Subscribe onError={this.handleError} />\n        <Subscribe event=\"connected\" handler={this.handleConnectionSuccess} />\n        <Subscribe event=\"manifest\" handler={this.handleManifestUpdate} />\n        <Subscribe event=\"artboard\" handler={this.handleArtboardUpdate} />\n        {process.env.NODE_ENV === 'development' && (\n          <Subscribe\n            event=\"current-artboard\"\n            handler={this.handleUpdateCurrentArtboard}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nConnectionManager.propTypes = {}\n\nexport default R.compose(\n  withSocket,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ConnectionManager)\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { transparentize } from 'polished'\n\nconst borderColor = '#00fffc'\nconst borderRadius = '1px'\n\nconst HitArea = styled.div.attrs({\n  style: props => ({\n    width: props.width,\n    height: props.height,\n    top: props.top || 'initial',\n    right: props.right || 'initial',\n    bottom: props.bottom || 'initial',\n    left: props.left || 'initial',\n    backgroundColor: transparentize(0.8, props.color || borderColor)\n  })\n})`\n  position: absolute;\n  border-radius: ${borderRadius};\n  display: block;\n  opacity: ${props => (props.isActive ? '1' : '0')};\n  transition: opacity 0.25s;\n  cursor: pointer;\n  box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.15);\n  pointer-events: auto;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border: 2px solid ${props => props.color || borderColor};\n    border-radius: ${borderRadius};\n  }\n`\n\nHitArea.propTypes = {\n  color: PropTypes.string\n}\n\nHitArea.defaultProps = {\n  color: borderColor\n}\n\nexport default HitArea\n","import globalizeSelectors from 'utils/globalizeSelectors'\nimport * as R from 'ramda'\n\nconst localState = R.path(['entities', 'layers'])\n\nexport const getLayer = (id, state) => state.byId[id]\n\nexport const getDestinationArtboardId = (id, state) => {\n  return R.pathOr(null, ['flow', 'destinationArtboardID'], getLayer(id, state))\n}\n\nexport default globalizeSelectors(localState, {\n  getLayer,\n  getDestinationArtboardId\n})\n","import * as R from 'ramda'\nimport globalizeSelectors from 'utils/globalizeSelectors'\n\nconst localState = R.path(['hitAreas'])\n\nexport const getColor = state => R.propOr(null, 'color', state)\n\nexport default globalizeSelectors(localState, {\n  getColor\n})\n","import globalizeSelectors from 'utils/globalizeSelectors'\nimport * as R from 'ramda'\n\nconst localState = R.path(['screen'])\n\nexport const getScalingMode = state => state.scalingMode\nexport const getIsScrollbarDimensionsSet = state =>\n  state.scrollbarDimensions !== null\nexport const getScrollbarDimensions = state => state.scrollbarDimensions\nexport const getShouldHideScrollbars = state =>\n  !!state.scrollbarDimensions.width || !!state.scrollbarDimensions.height\nexport const getCanGoBack = state => state.canGoBack\n\nexport default globalizeSelectors(localState, {\n  getScalingMode,\n  getIsScrollbarDimensionsSet,\n  getScrollbarDimensions,\n  getShouldHideScrollbars,\n  getCanGoBack\n})\n","import * as R from 'ramda'\nimport { rgba } from 'polished'\n\nconst mapIndexed = R.addIndex(R.map)\n\n/**\n * Takes a value ranging from 0 - 1 and converts it to range 0 - 255\n * @param {Number} float\n */\nexport const mapTo255 = R.compose(\n  R.clamp(0, 255),\n  Math.floor,\n  R.multiply(255)\n)\n\n/**\n * Takes an array of 4 floats and converts the values to rgba values\n * @param {Array<Number>} floats\n */\nexport const toRGBA = mapIndexed(\n  (value, i) => (i === 3 ? value : mapTo255(value))\n)\n\nexport const predicate = R.allPass([\n  R.compose(\n    R.not,\n    R.isNil\n  ),\n  R.where({\n    0: R.is(Number),\n    1: R.is(Number),\n    2: R.is(Number),\n    3: R.is(Number)\n  }),\n  Array.isArray,\n  R.propEq('length', 4)\n])\n\n/**\n * Takes an array of 4 float values ranging from 0 to 1\n * Converts the float values to rgba values [0 - 255, 0 - 255, 0 - 255, 0 - 1]\n * Outputs a formatted CSS string of the color values or null\n * @param {Array<Number>} floats\n */\nconst floatsToCSSRGBAString = R.ifElse(\n  predicate,\n  R.compose(\n    R.apply(rgba),\n    toRGBA\n  ),\n  R.always(null)\n)\n\nexport default floatsToCSSRGBAString\n","import { createSelector } from 'reselect'\nimport layerSelectors from 'redux/modules/entities/layers/selectors'\nimport hitAreaSelectors from 'redux/modules/hitAreas/selectors'\nimport screenSelectors from 'redux/modules/screen/selectors'\nimport floatsToCSSRGBAString from 'utils/floatsToCSSRGBAString'\n\nconst px = x => x + 'px'\n\nexport const getHitAreaDetails = createSelector(\n  (state, props) => layerSelectors.getLayer(props.layerId, state),\n  (state, props) => props.scale,\n  state => hitAreaSelectors.getColor(state),\n  state => screenSelectors.getCanGoBack(state),\n  (layer, scale, color, canGoBack) => {\n    return {\n      flow: layer.flow,\n      width: px(Math.ceil(layer.boundingRect.width * scale)),\n      height: px(Math.ceil(layer.boundingRect.height * scale)),\n      top: px(layer.boundingRect.y * scale),\n      left: px(layer.boundingRect.x * scale),\n      color: floatsToCSSRGBAString(color),\n      canGoBack\n    }\n  }\n)\n","import { push, goBack } from 'react-router-redux'\nimport { withProps, withHandlers, branch, renderNothing } from 'recompose'\nimport * as R from 'ramda'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport HitArea from 'components/HitArea'\nimport { getHitAreaDetails } from './selectors'\n\nexport const goToArtboard = (dispatch, props) => (\n  artboardId,\n  animationType,\n  keepParentScrollPosition\n) => {\n  dispatch(\n    push({\n      pathname: `/${artboardId}`,\n      state: {\n        transitionType: animationType,\n        fromArtboardId: props.match.params.artboardId,\n        toArtboardId: artboardId,\n        keepParentScrollPosition\n      }\n    })\n  )\n}\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  goToArtboard: goToArtboard(dispatch, props),\n  goToPreviousArtboard: () => {\n    dispatch(goBack())\n  }\n})\n\nconst stopPropagation = e => e.stopPropagation()\n\nconst enhance = R.compose(\n  withProps(() => {\n    return {\n      // Stop propagation `onMouseDown` and `onTouchStart` so that FlowView will\n      // not flash hit areas when an actual HitArea is clicked/touched.\n      onMouseDown: stopPropagation,\n      onTouchStart: stopPropagation\n    }\n  }),\n  withHandlers({\n    onClick: ({ flow, goToArtboard, goToPreviousArtboard, keepParentScrollPosition }) => e => {\n      e.stopPropagation()\n      if (flow.isBackAction) {\n        goToPreviousArtboard()\n      } else if (flow.destinationArtboardID) {\n        goToArtboard(flow.destinationArtboardID, flow.animationType, keepParentScrollPosition)\n      }\n    }\n  }),\n  branch(\n    ({ flow, canGoBack }) => flow && flow.isBackAction && !canGoBack,\n    renderNothing\n  )\n)\n\nexport default R.compose(\n  withRouter,\n  connect(\n    getHitAreaDetails,\n    mapDispatchToProps\n  ),\n  enhance\n)(HitArea)\n","import globalizeSelectors from 'utils/globalizeSelectors'\nimport * as R from 'ramda'\n\nconst localState = R.path(['entities', 'artboards'])\n\nexport const getArtboard = (id, state) => R.pathOr(null, ['byId', id], state)\n\nexport const getArtboards = state => {\n  const artboardsById = R.pathOr({}, ['byId'], state)\n  return R.values(artboardsById)\n}\n\nexport const getLayers = (id, state) =>\n  R.propOr([], 'layers', getArtboard(id, state))\n\nexport const getViewport = (artboardId, state) =>\n  R.propOr(\n    { width: null, height: null },\n    'viewport',\n    getArtboard(artboardId, state)\n  )\n\nexport const getArtboardFileTypes = (id, state) => {\n  const artboard = getArtboard(id, state)\n\n  return R.propOr(['full'], 'files', artboard)\n}\n\nexport default globalizeSelectors(localState, {\n  getArtboards,\n  getArtboard,\n  getLayers,\n  getViewport,\n  getArtboardFileTypes\n})\n","import { createSelector } from 'reselect'\nimport * as R from 'ramda'\nimport artboardSelectors, {\n  getLayers as getLayersForArtboard\n} from 'redux/modules/entities/artboards/selectors'\nimport {\n  getLayer,\n  getDestinationArtboardId\n} from 'redux/modules/entities/layers/selectors'\n\nexport const getRelatedArtboardIds = createSelector(\n  (state, props) => props.match.params.artboardId,\n  state => state.entities.artboards,\n  state => state.entities.layers,\n  (currentArtboardId, artboards, layers) => {\n    const layerIds = getLayersForArtboard(currentArtboardId, artboards)\n    const relatedArtboardIds = layerIds\n      .map(layerId => {\n        return getDestinationArtboardId(layerId, layers)\n      })\n      .filter(idOrNull => idOrNull)\n    return R.uniq(relatedArtboardIds)\n  }\n)\n\nexport const getLayers = createSelector(\n  (state, props) =>\n    artboardSelectors.getArtboard(props.match.params.artboardId, state),\n  state => state.entities.layers,\n  (artboard, layers) => {\n    return artboard\n      ? artboard.layers.map(layerId => getLayer(layerId, layers))\n      : []\n  }\n)\n","const mirrorPort = parseInt(\n  process.env.NODE_ENV === 'development'\n    ? process.env.REACT_APP_MIRROR_PORT || window.location.port\n    : window.location.port,\n  10\n)\n\nexport default {\n  socketUri: `ws://127.0.0.1:${mirrorPort + 1}`,\n  fileServerUri: `http://127.0.0.1:${mirrorPort}`\n}\n","import config from 'config'\n\nconst createArtboardUrl = (\n  selectedArtboardId,\n  token,\n  scale,\n  revision = 0,\n  type = 'full'\n) =>\n  `${\n    config.fileServerUri\n  }/artboards/${selectedArtboardId}?scale=${scale}&token=${token}&v=${revision}&type=${type}`\n\nexport default createArtboardUrl\n","import globalizeSelectors from 'utils/globalizeSelectors'\nimport * as R from 'ramda'\n\nconst localState = R.path(['revisions'])\n\nexport const getArtboardRevision = (id, state) => state.artboards[id]\n\nexport default globalizeSelectors(localState, {\n  getArtboardRevision\n})\n","import { createSelector } from 'reselect'\nimport createArtboardUrl from 'utils/createArtboardUrl'\nimport revisionSelectors from 'redux/modules/revisions/selectors'\nimport artboardSelectors from 'redux/modules/entities/artboards/selectors'\nimport * as R from 'ramda'\n\nexport const getUrlsForArtboardIdByType = createSelector(\n  state => state.connection.token,\n  (state, props) => props.artboardId,\n  (state, props) =>\n    revisionSelectors.getArtboardRevision(props.artboardId, state),\n  (state, props) =>\n    artboardSelectors.getArtboardFileTypes(props.artboardId, state),\n  (token, artboardId, revision, fileTypes) => {\n    return fileTypes.reduce((urlsByType, fileType) => {\n      urlsByType[fileType] = R.map(\n        scale =>\n          createArtboardUrl(artboardId, token, scale, revision, fileType),\n        R.range(1, 4)\n      )\n      return urlsByType\n    }, {})\n  }\n)\n","import React, { PureComponent } from 'react'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n`\n\nconst Transition = styled(CSSTransition)`\n  transition-duration: 400ms;\n  transition-property: transform;\n  perspective: 1000;\n\n  /* none */\n\n  &.none-enter {\n    z-index: 20;\n    transform: translate(0, 0);\n  }\n\n  /* fromRight */\n\n  &.fromRight-enter {\n    transform: translateX(100%);\n    z-index: 50;\n  }\n\n  &.fromRight-enter-active {\n    transform: translateX(0);\n  }\n\n  &.fromRight-enter-done {\n    transition: none;\n  }\n\n  &.fromRight-exit {\n  }\n\n  &.fromRight-exit-active {\n    transform: translateX(-30%);\n  }\n\n  /* fromRightReverse */\n\n  &.fromRightReverse-enter {\n    transform: translateX(-30%);\n  }\n\n  &.fromRightReverse-enter-active {\n    transform: translateX(0);\n  }\n\n  &.fromRightReverse-enter-done {\n    transition: none;\n  }\n\n  &.fromRightReverse-exit {\n    z-index: 50;\n  }\n\n  &.fromRightReverse-exit-active {\n    transform: translateX(100%);\n  }\n\n  /* fromLeft */\n\n  &.fromLeft-enter {\n    transform: translateX(-100%);\n    z-index: 50;\n  }\n\n  &.fromLeft-enter-active {\n    transform: translateX(0);\n  }\n\n  &.fromLeft-enter-done {\n    transition: none;\n  }\n\n  &.fromLeft-exit {\n  }\n\n  &.fromLeft-exit-active {\n    transform: translateX(30%);\n  }\n\n  /* fromLeftReverse */\n\n  &.fromLeftReverse-enter {\n    transform: translateX(30%);\n  }\n\n  &.fromLeftReverse-enter-active {\n    transform: translateX(0);\n  }\n\n  &.fromLeftReverse-enter-done {\n    transition: none;\n  }\n\n  &.fromLeftReverse-exit {\n    z-index: 50;\n  }\n\n  &.fromLeftReverse-exit-active {\n    transform: translateX(-100%);\n  }\n\n  /* fromTop */\n\n  &.fromTop-enter {\n    transform: translateY(-100%);\n    z-index: 50;\n  }\n\n  &.fromTop-enter-active {\n    transform: translateY(0);\n  }\n\n  &.fromTop-enter-done {\n    transition: none;\n  }\n\n  &.fromTop-exit {\n  }\n\n  &.fromTop-exit-active {\n  }\n\n  /* fromTopReverse */\n\n  &.fromTopReverse-enter {\n  }\n\n  &.fromTopReverse-enter-active {\n  }\n\n  &.fromTopReverse-enter-done {\n    transition: none;\n  }\n\n  &.fromTopReverse-exit {\n    transform: translateY(0);\n    z-index: 50;\n  }\n\n  &.fromTopReverse-exit-active {\n    transform: translateY(-100%);\n  }\n\n  /* fromBottom */\n\n  &.fromBottom-enter {\n    transform: translateY(100%);\n    z-index: 50;\n  }\n\n  &.fromBottom-enter-active {\n    transform: translateY(0);\n  }\n\n  &.fromBottom-enter-done {\n    transition: none;\n  }\n\n  &.fromBottom-exit {\n  }\n\n  &.fromBottom-exit-active {\n  }\n\n  /* fromBottomReverse */\n\n  &.fromBottomReverse-enter {\n  }\n\n  &.fromBottomReverse-enter-active {\n  }\n\n  &.fromBottomReverse-enter-done {\n    transition: none;\n  }\n\n  &.fromBottomReverse-exit {\n    transform: translateY(0);\n    z-index: 50;\n  }\n\n  &.fromBottomReverse-exit-active {\n    transform: translateY(100%);\n  }\n`\n\nclass IOSTransition extends PureComponent {\n  render() {\n    const { transition, transitionKey, children } = this.props\n\n    return (\n      <TransitionGroup\n        childFactory={child =>\n          React.cloneElement(child, {\n            classNames: transition,\n          })\n        }>\n        <Transition key={transitionKey} timeout={400} classNames={transition}>\n          <Wrapper>{children}</Wrapper>\n        </Transition>\n      </TransitionGroup>\n    )\n  }\n}\n\nexport default IOSTransition\n","import React, { Component } from 'react'\nimport * as R from 'ramda'\nimport IOSTransition from './IOSTransition'\n\n// https://github.com/tkh44/preact-shallow-compare/blob/master/src/index.js\nconst shallowDiffers = (a, b) => {\n  for (let i in a) if (!(i in b)) return true\n  for (let i in b) if (a[i] !== b[i]) return true\n  return false\n}\n\nconst isNoneTransition = x => x === 'none'\nconst omitChildrenProp = R.omit(['children'])\n\nconst reversed = {\n  fromRight: 'fromRightReverse',\n  fromLeft: 'fromLeftReverse',\n  fromTop: 'fromTopReverse',\n  fromBottom: 'fromBottomReverse',\n  none: 'none'\n}\n\nclass ArtboardsTransition extends Component {\n  state = {\n    previousTransition: 'none'\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updatePreviousTransition(nextProps)\n  }\n\n  updatePreviousTransition = nextProps => {\n    // Prevent scrolling to top after back transition\n    if (\n      !shallowDiffers(omitChildrenProp(nextProps), omitChildrenProp(this.props))\n    )\n      return\n\n    this.setState({ previousTransition: this.transition })\n  }\n\n  get transition() {\n    return R.pathOr('none', ['state', 'transitionType'], this.props.location)\n  }\n\n  render() {\n    const { children, location, isBack } = this.props\n    const { previousTransition } = this.state\n\n    return (\n      <IOSTransition\n        transitionKey={\n          R.all(isNoneTransition, [previousTransition, this.transition]) &&\n          !previousTransition\n            ? 0\n            : location.key\n        }\n        transition={isBack ? reversed[previousTransition] : this.transition}>\n        {children}\n      </IOSTransition>\n    )\n  }\n}\n\nexport default ArtboardsTransition\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n`\n\nconst Viewport = ({ width, height, children }) => (\n  <Container width={width} height={height}>\n    {children}\n  </Container>\n)\n\nViewport.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  children: PropTypes.node\n}\n\nexport default Viewport\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  position: relative;\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  overflow: hidden;\n  /*\n    If the prototype doesn't have any background colour it should\n    default to white, like in the mac app\n    https://github.com/sketch-hq/Cloud/issues/1717#issuecomment-585618001\n   */\n  background-color: ${props => props.backgroundColor || '#fff'};\n`\n\nconst ScrollContainer = styled.div`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  overflow: auto;\n  position: relative;\n  -webkit-overflow-scrolling: touch;\n  overflow-scrolling: touch;\n  ${props =>\n    props.hideScrollbars &&\n    `&::-webkit-scrollbar {\n    display: none;\n  }`};\n`\n\nconst FixedArea = styled.div`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  z-index: 1;\n  overflow: hidden;\n`\n\nconst ContentsArea = styled.div`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  position: relative;\n  overflow: hidden;\n`\n\nconst Artboard = ({\n  viewportWidth,\n  viewportHeight,\n  contentsWidth,\n  contentsHeight,\n  scrollbarWidth,\n  scrollbarHeight,\n  hideScrollbarsOnWebkit,\n  children,\n  fixedChildren,\n  backgroundColor,\n  scrollContainerRef,\n  ...props\n}) => {\n  const finalViewportWidth =\n    contentsHeight > viewportHeight\n      ? viewportWidth + scrollbarWidth\n      : viewportWidth\n  const finalViewportHeight =\n    contentsWidth > viewportWidth\n      ? viewportHeight + scrollbarHeight\n      : viewportHeight\n\n  return (\n    <Container\n      width={finalViewportWidth}\n      height={finalViewportHeight}\n      backgroundColor={backgroundColor}\n      {...props}\n    >\n      <FixedArea width={viewportWidth} height={viewportHeight}>\n        {fixedChildren}\n      </FixedArea>\n      <ScrollContainer\n        innerRef={scrollContainerRef}\n        hideScrollbars={hideScrollbarsOnWebkit}\n        width={finalViewportWidth}\n        height={finalViewportHeight}\n      >\n        <ContentsArea width={contentsWidth} height={contentsHeight}>\n          {children}\n        </ContentsArea>\n      </ScrollContainer>\n    </Container>\n  )\n}\n\nArtboard.propTypes = {\n  viewportWidth: PropTypes.number.isRequired,\n  viewportHeight: PropTypes.number.isRequired,\n  contentsWidth: PropTypes.number.isRequired,\n  contentsHeight: PropTypes.number.isRequired,\n  children: PropTypes.node,\n  fixedChildren: PropTypes.node,\n  hideScrollbarsOnWebkit: PropTypes.bool,\n  scrollbarWidth: PropTypes.number,\n  scrollbarHeight: PropTypes.number,\n  scrollContainerRef: PropTypes.shape({\n    current: PropTypes.object\n  }),\n  backgroundColor: PropTypes.string\n}\n\nArtboard.defaultProps = {\n  hideScrollbarsOnWebkit: false,\n  scrollbarWidth: 0,\n  scrollbarHeight: 0,\n  backgroundColor: '#fff'\n}\n\nexport default Artboard\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nconst withIsBack = WrappedComponent =>\n  withRouter(\n    class extends Component {\n      state = {\n        isBack: false,\n        backFrom: null\n      }\n      historySinceEnter = []\n\n      componentDidMount() {\n        this.historySinceEnter.push(this.props.location)\n      }\n\n      componentWillReceiveProps(nextProps) {\n        // Check if pop action refers to back or forwards\n        // Adapted from https://github.com/ReactTraining/history/issues/334#issuecomment-322740342\n        const { location } = this.props\n        const hasRouteChanged = nextProps.location.key !== location.key\n\n        if (hasRouteChanged) {\n          let isBack = false\n          let backFrom = null\n\n          switch (nextProps.history.action) {\n            case 'PUSH':\n              this.historySinceEnter.push(nextProps.location)\n              isBack = !!nextProps.location.state?.isBackAction\n\n              break\n\n            case 'POP':\n              // Pop state changes fire for all navigations (back and forwards). We use the saved\n              // history state to distinguish between backward and forward navigations.\n              const lastHistoryIndex = this.historySinceEnter.length - 1\n              const previousLocationKey = this.historySinceEnter[\n                lastHistoryIndex - 1\n              ]\n\n              if (previousLocationKey?.key === nextProps.location.key) {\n                backFrom = this.historySinceEnter.pop()\n                isBack = true\n              } else {\n                this.historySinceEnter.push(nextProps.location)\n              }\n              break\n\n            case 'REPLACE':\n              this.historySinceEnter.pop()\n              this.historySinceEnter.push(nextProps.location)\n              break\n\n            default:\n              break\n          }\n\n          this.setState({ isBack, backFrom })\n        }\n      }\n\n      render() {\n        return (\n          <WrappedComponent\n            isBack={this.state.isBack}\n            backFrom={this.state.backFrom}\n            prototypeHistory={this.historySinceEnter}\n            {...this.props}\n          />\n        )\n      }\n    }\n  )\n\nexport default withIsBack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport ArtboardIcon from './artboard.svg'\nimport WarningIcon from './warning.svg'\n\nconst Container = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  line-height: 1.5;\n  width: ${props => props.width};\n  height: ${props => props.height};\n`\n\nconst Title = styled.h1`\n  font-size: 0.6875rem;\n  margin: 0;\n  user-select: none;\n`\n\nconst Message = styled.p`\n  font-size: 0.6875rem;\n  opacity: 0.8;\n  max-width: 170px;\n  margin: 0;\n  user-select: none;\n`\n\nconst StyledImg = styled.img`\n  margin-bottom: 0.9375rem;\n  user-select: none;\n`\n\nconst Icon = ({ type }) => {\n  switch (type) {\n    case 'warn':\n      return <StyledImg src={WarningIcon} alt=\"Warning\" />\n    case 'artboard':\n    default:\n      return <StyledImg src={ArtboardIcon} alt=\"Artboard\" />\n  }\n}\n\nIcon.propTypes = {\n  type: PropTypes.string\n}\n\nconst FallbackState = ({ title, message, width, height, iconType }) => (\n  <Container width={width} height={height}>\n    <Icon type={iconType} />\n    <Title>{title}</Title>\n    <Message>{message}</Message>\n  </Container>\n)\n\nFallbackState.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  iconType: PropTypes.oneOf(['artboard', 'warn'])\n}\n\nexport default FallbackState\n","export const userAgentBelongsToSketch = userAgent =>\n  userAgent.toLowerCase().includes('sketch')\n\nexport default () => userAgentBelongsToSketch(window.navigator.userAgent)\n","const createSrcSet = imageUrls =>\n  imageUrls.map((url, i) => `${url} ${i + 1}x`, '').join(', ')\n\nexport default createSrcSet\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport * as R from 'ramda'\nimport { goToArtboard } from 'containers/HitArea'\nimport { GLOBAL_PROPERTY_NAMESPACE } from 'constants/globals'\n\nconst noop = () => {}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    goToArtboard: goToArtboard(dispatch, props)\n  }\n}\n\nclass AddGlobalTransitionToArtboardHandler extends Component {\n  componentDidMount() {\n    window[GLOBAL_PROPERTY_NAMESPACE].transitionToArtboard = (\n      destinationArtboardId,\n      animationType\n    ) => this.props.goToArtboard(destinationArtboardId, animationType)\n  }\n\n  componentWillUnmount() {\n    window[GLOBAL_PROPERTY_NAMESPACE].transitionToArtboard = noop\n  }\n\n  render() {\n    return null\n  }\n}\n\nAddGlobalTransitionToArtboardHandler.propTypes = {\n  goToArtboard: PropTypes.func.isRequired\n}\n\nexport default R.compose(\n  withRouter,\n  connect(\n    null,\n    mapDispatchToProps\n  )\n)(AddGlobalTransitionToArtboardHandler)\n","const loadImage = ({ src, srcSet }) => {\n  return new Promise((resolve, reject) => {\n    let image = new window.Image()\n    image.addEventListener('load', e => {\n      resolve(e)\n    })\n    image.addEventListener('error', e => {\n      reject(e)\n      image = null\n    })\n    image.src = src\n\n    if (srcSet) image.srcset = srcSet\n  })\n}\n\nexport default loadImage\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport loadImage from 'utils/loadImage'\n\nclass FetchImage extends Component {\n  fetchImage(props) {\n    this.promise = loadImage({ src: props.src, srcSet: props.srcSet })\n  }\n\n  componentDidMount() {\n    this.fetchImage(this.props)\n  }\n\n  render() {\n    return null\n  }\n}\n\nFetchImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  srcSet: PropTypes.string\n}\n\nexport default FetchImage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getUrlsForArtboardIdByType } from './selectors'\nimport FetchImage from 'components/FetchImage'\nimport createSrcSet from 'utils/createSrcSet'\n\nconst mapStateToProps = (state, props) => {\n  return { urls: getUrlsForArtboardIdByType(state, props) }\n}\n\nconst PrefetchArtboardImages = ({ urls: { full, scrollable, fixed } }) => {\n  return [full, scrollable, fixed]\n    .filter(arr => arr && arr.length)\n    .map(urls => (\n      <FetchImage key={urls[0]} src={urls[0]} srcSet={createSrcSet(urls)} />\n    ))\n}\n\nPrefetchArtboardImages.propTypes = {\n  urls: PropTypes.shape({\n    full: PropTypes.array,\n    scrollable: PropTypes.array,\n    fixed: PropTypes.array\n  }).isRequired\n}\n\nexport default connect(mapStateToProps)(PrefetchArtboardImages)\n","import React, { useRef, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose, withState, withHandlers, withProps, toClass } from 'recompose'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport HitArea from 'containers/HitArea'\nimport artboardSelectors from 'redux/modules/entities/artboards/selectors'\nimport screenSelectors from 'redux/modules/screen/selectors'\nimport { getLayers, getRelatedArtboardIds } from './selectors'\nimport { getUrlsForArtboardIdByType } from 'containers/PrefetchArtboardImages/selectors'\nimport { withRouter } from 'react-router-dom'\nimport * as R from 'ramda'\nimport {\n  ArtboardsTransition,\n  Artboard,\n  Viewport,\n  withIsBack\n} from 'components/sketch-frontend-common'\nimport floatsToCSSRGBAString from 'utils/floatsToCSSRGBAString'\nimport { withContentRect } from 'react-measure'\nimport FallbackState from 'components/FallbackState'\nimport isSketchWebView from 'utils/isSketchWebView'\nimport { actions as artboardActions } from 'redux/modules/entities/artboards'\nimport createSrcSet from 'utils/createSrcSet'\nimport AddGlobalTransitionToArtboardHandler from 'containers/AddGlobalTransitionToArtboardHandler'\nimport PrefetchArtboardImages from 'containers/PrefetchArtboardImages'\nimport KeyHandler, { KEYUP, KEYDOWN } from 'react-key-handler'\n\nconst flowViewBackgroundColor = '#000'\n\nconst Container = toClass(styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  max-width: 100vw;\n  max-height: 100vh;\n  background-color: ${flowViewBackgroundColor};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`)\n\nconst smallest = (...values) => R.head(R.sort((a, b) => a - b, values))\n\nfunction calculateScale(\n  [containerWidth, containerHeight],\n  [viewportWidth, viewportHeight]\n) {\n  const x = containerWidth < viewportWidth ? containerWidth / viewportWidth : 1\n  const y =\n    containerHeight < viewportHeight ? containerHeight / viewportHeight : 1\n\n  return smallest(x, y)\n}\n\nfunction calculateViewport({\n  scale,\n  viewportWidth,\n  viewportHeight,\n  isSketchWebView,\n  scrollbarDimensions\n}) {\n  const addScrollbarDimensions = R.ifElse(\n    () => !isSketchWebView,\n    R.zipWith(R.add, [scrollbarDimensions.width, scrollbarDimensions.height]),\n    R.identity\n  )\n\n  const calculateViewport = R.pipe(\n    R.map(R.pipe(R.multiply(scale), Math.floor)),\n    addScrollbarDimensions\n  )\n\n  return calculateViewport([viewportWidth, viewportHeight])\n}\n\nfunction renderArtboardNotFound() {\n  return (\n    <FallbackState\n      width=\"100vw\"\n      height=\"100vh\"\n      title=\"Artboard not found\"\n      message=\"Select an Artboard to preview.\"\n      iconType=\"artboard\"\n    />\n  )\n}\n\nconst FlowView = props => {\n  const {\n    viewportWidth,\n    viewportHeight,\n    artboard,\n    flashHitareas,\n    hitAreasAreActive,\n    setHitAreasAreActive,\n    layers,\n    match,\n    location,\n    measureRef,\n    contentRect,\n    shouldHideScrollbars,\n    scrollbarDimensions,\n    scrollableArtboardUrls,\n    fixedViewportUrls,\n    artboardUrls,\n    relatedArtboardIds,\n    prototypeHistory,\n    backFrom,\n    isBack,\n    ...rest\n  } = props\n\n  const artboardRefs = useRef({})\n  const artboardScroll = useRef({})\n\n  const previousLocation = prototypeHistory.slice(-1)[0]\n\n  /**\n   * Scroll to scroll level or 0 when the location.key is changed\n   * this will also \"keepParentScrollPosition\" if that state is set\n   */\n  useEffect(() => {\n    const { key } = location\n    const savedArtboardRef = artboardRefs.current[key]\n\n    let scrollLevel = artboardScroll.current[key] || 0\n\n    if (location.state?.keepParentScrollPosition) {\n      const [previousElementScroll] = prototypeHistory.slice(-2)\n\n      if (previousElementScroll?.key) {\n        /**\n         * When moving back and forward in the browser history if there's\n         * already a saved scroll position in the \"scrollLevels\" the origin scroll position\n         * should be kept instead of maintaining the parents one\n         */\n        scrollLevel =\n          artboardScroll.current[location.key] ||\n          artboardScroll.current[previousElementScroll.key]\n      }\n    }\n\n    if (savedArtboardRef) {\n      savedArtboardRef.scrollTo(\n        0,\n        backFrom?.state.keepParentScrollPosition\n          ? artboardScroll.current[backFrom.key]\n          : scrollLevel\n      )\n    }\n  }, [location, prototypeHistory, backFrom])\n\n  /**\n   * Save artboard scroll level when a location.key is changed\n   */\n  useEffect(() => {\n    const { key } = location\n\n    const artboards = artboardRefs.current\n    const scrollLevels = artboardScroll.current\n\n    return () => {\n      scrollLevels[key] = artboards[key]?.scrollTop\n    }\n  }, [location])\n\n  useEffect(() => {\n    const { viewportWidth, viewportHeight, setCurrentArtboard } = props\n    const artboardId = props?.match?.params?.artboardId || null\n    if ((!viewportWidth || !viewportHeight) && artboardId) {\n      setCurrentArtboard(artboardId)\n    }\n    // run only when component is mounted\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const artboardId = props.artboard?.id\n  useEffect(() => {\n    if (isSketchWebView()) {\n      window.webkit.messageHandlers.artboardDidChange.postMessage(artboardId)\n    }\n  }, [artboardId])\n\n  if (!artboard) return renderArtboardNotFound()\n\n  const containerWidth = contentRect.entry.width || window.innerWidth\n  const containerHeight = contentRect.entry.height || window.innerHeight\n  const scale = calculateScale(\n    [containerWidth, containerHeight],\n    [viewportWidth, viewportHeight]\n  )\n  const [finalViewportWidth, finalViewportHeight] = calculateViewport({\n    scale,\n    viewportWidth,\n    viewportHeight,\n    isSketchWebView,\n    scrollbarDimensions\n  })\n\n  return (\n    <Container innerRef={measureRef} onMouseDown={flashHitareas} {...rest}>\n      {relatedArtboardIds.map(artboardId => (\n        <PrefetchArtboardImages key={artboardId} artboardId={artboardId} />\n      ))}\n      <KeyHandler\n        keyEventName={KEYDOWN}\n        keyValue=\"Shift\"\n        onKeyHandle={() => setHitAreasAreActive(true)}\n      />\n      <KeyHandler\n        keyEventName={KEYUP}\n        keyValue=\"Shift\"\n        onKeyHandle={() => setHitAreasAreActive(false)}\n      />\n      <AddGlobalTransitionToArtboardHandler />\n      <Viewport width={finalViewportWidth} height={finalViewportHeight}>\n        <ArtboardsTransition isBack={isBack} location={location}>\n          <Artboard\n            scrollContainerRef={ref => {\n              /**\n               * Save the artboard reference in the \"artboardRefs\"\n               *\n               * This is needed because when animating there might be more than aw <Artboard /> component\n               * mounted. This prevents any reference from being overridden.\n               */\n              if (ref) {\n                artboardRefs.current[location.key] = ref\n              }\n            }}\n            scrollbarWidth={scrollbarDimensions.width}\n            scrollbarHeight={scrollbarDimensions.height}\n            hideScrollbarsOnWebkit={shouldHideScrollbars}\n            viewportWidth={finalViewportWidth}\n            viewportHeight={finalViewportHeight}\n            contentsWidth={Math.floor(artboard.width * scale)}\n            contentsHeight={Math.floor(artboard.height * scale)}\n            backgroundColor={\n              floatsToCSSRGBAString(artboard.backgroundColor) || '#fff'\n            }\n            fixedChildren={\n              <React.Fragment>\n                {artboardUrls.fixed && (\n                  <img\n                    src={artboardUrls.fixed[0]}\n                    srcSet={createSrcSet(artboardUrls.fixed)}\n                    style={{ width: '100%' }}\n                    draggable={false}\n                    alt=\"\"\n                  />\n                )}\n                {!!layers.filter(l => l.isFixedToViewport).length &&\n                  layers\n                    .filter(l => l.isFixedToViewport)\n                    .map(layer => (\n                      <HitArea\n                        key={layer.id}\n                        layerId={layer.id}\n                        isActive={hitAreasAreActive}\n                        previousLocation={previousLocation}\n                        keepParentScrollPosition={\n                          /**\n                           * When going back (Target: 'Previous Artboard')\n                           * It should remain the same scroll level as we have currently\n                           *\n                           * https://github.com/sketch-hq/Cloud/issues/3029#issuecomment-589571898\n                           */\n                          layer.flow.maintainScrollPosition ||\n                          layer.flow.isBackAction\n                        }\n                        scale={scale}\n                      />\n                    ))}\n              </React.Fragment>\n            }\n          >\n            {layers\n              .filter(l => !l.isFixedToViewport)\n              .map(layer => (\n                <HitArea\n                  key={layer.id}\n                  layerId={layer.id}\n                  isActive={hitAreasAreActive}\n                  previousLocation={previousLocation}\n                  keepParentScrollPosition={\n                    /**\n                     * When going back (Target: 'Previous Artboard')\n                     * It should remain the same scroll level as we have currently\n                     *\n                     * https://github.com/sketch-hq/Cloud/issues/3029#issuecomment-589571898\n                     */\n                    layer.flow.maintainScrollPosition || layer.flow.isBackAction\n                  }\n                  scale={scale}\n                />\n              ))}\n            {artboardUrls.scrollable || artboardUrls.full ? (\n              <img\n                src={\n                  artboardUrls.scrollable\n                    ? artboardUrls.scrollable[0]\n                    : artboardUrls.full[0]\n                }\n                srcSet={createSrcSet(\n                  artboardUrls.scrollable || artboardUrls.full\n                )}\n                style={{ width: '100%' }}\n                draggable={false}\n                alt=\"\"\n              />\n            ) : null}\n          </Artboard>\n        </ArtboardsTransition>\n      </Viewport>\n    </Container>\n  )\n}\n\nFlowView.propTypes = {\n  artboard: PropTypes.object,\n  flashHitareas: PropTypes.func.isRequired,\n  hitAreasAreActive: PropTypes.bool.isRequired,\n  viewportWidth: PropTypes.number.isRequired,\n  viewportHeight: PropTypes.number.isRequired,\n  scrollbarDimensions: PropTypes.object.isRequired,\n  setCurrentArtboard: PropTypes.func,\n  scrollableArtboardUrls: PropTypes.array,\n  fixedViewportUrls: PropTypes.array,\n  relatedArtboardUrls: PropTypes.array,\n  isSketchWebView: PropTypes.bool.isRequired,\n  shouldHideScrollbars: PropTypes.bool.isRequired,\n  artboardUrls: PropTypes.object.isRequired,\n  relatedArtboardIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  prototypeHistory: PropTypes.array,\n  isBack: PropTypes.bool\n}\n\nconst mapStateToProps = (state, props) => {\n  const artboardId = props.match.params.artboardId\n  const artboard = artboardSelectors.getArtboard(artboardId, state)\n  const viewport = artboardSelectors.getViewport(artboardId, state)\n\n  return {\n    artboard,\n    layers: getLayers(state, props),\n    viewportWidth: R.prop('width', viewport),\n    viewportHeight: R.prop('height', viewport),\n    shouldHideScrollbars: screenSelectors.getShouldHideScrollbars(state),\n    scrollbarDimensions: screenSelectors.getScrollbarDimensions(state),\n    artboardUrls: getUrlsForArtboardIdByType(state, props),\n    relatedArtboardIds: getRelatedArtboardIds(state, props)\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentArtboard: artboardId =>\n    dispatch(artboardActions.setCurrentArtboard(artboardId))\n})\n\nconst enhance = compose(\n  withState('hitAreasAreActive', 'setHitAreasAreActive', false),\n  withHandlers({\n    flashHitareas: ({ setHitAreasAreActive, hitAreasAreActive }) => () => {\n      if (hitAreasAreActive) return\n      setHitAreasAreActive(true)\n      setTimeout(() => {\n        setHitAreasAreActive(false)\n      }, 500)\n    }\n  }),\n  withIsBack,\n  withRouter,\n  withProps(props => ({\n    isSketchWebView: isSketchWebView(),\n    artboardId: R.pathOr(null, ['match', 'params', 'artboardId'], props)\n  })),\n  connect(mapStateToProps, mapDispatchToProps),\n  withContentRect()\n)\n\nexport default enhance(FlowView)\n","import * as ActionTypes from 'redux/actionTypes'\n\nconst setScrollbarDimensions = scrollbarDimensions => ({\n  type: ActionTypes.SET_SCROLLBAR_DIMENSIONS,\n  payload: scrollbarDimensions\n})\n\nexport default {\n  setScrollbarDimensions\n}\n","import globalizeSelectors from 'utils/globalizeSelectors'\nimport * as R from 'ramda'\n\nconst localState = R.path(['manifest'])\n\nexport const getManifestIsSet = state => state.manifestIsSet\n\nexport default globalizeSelectors(localState, {\n  getManifestIsSet\n})\n","export default {\n  NO_ARTBOARDS_TITLE: 'No Artboards',\n  NO_ARTBOARDS_MESSAGE:\n    'Artboards are required in order to preview your designs.',\n\n  CONNECTION_ERROR_TITLE: 'Connection Error',\n  CONNECTION_ERROR_MESSAGE: 'Error establishing connection'\n}\n","import React from 'react'\n\nconst LocalizedStringsContext = React.createContext()\n\nexport default LocalizedStringsContext\n","import React, { Component } from 'react'\nimport defaultLocalizedStrings from 'constants/localizedStrings'\nimport LocalizedStringsContext from './LocalizedStringsContext'\nimport { GLOBAL_PROPERTY_NAMESPACE } from 'constants/globals'\nimport * as R from 'ramda'\n\nclass LocalizedStringsProvider extends Component {\n  state = {\n    localizedStrings: defaultLocalizedStrings\n  }\n\n  componentDidMount() {\n    window[GLOBAL_PROPERTY_NAMESPACE].setLocalizedStrings = stringsObj => {\n      this.setState(state => ({\n        ...state,\n        localizedStrings: R.merge(state.localizedStrings, stringsObj)\n      }))\n    }\n  }\n\n  render() {\n    return (\n      <LocalizedStringsContext.Provider value={this.state}>\n        {this.props.children}\n      </LocalizedStringsContext.Provider>\n    )\n  }\n}\n\nexport default LocalizedStringsProvider\n","import LocalizedStringsContext from './LocalizedStringsContext'\n\nexport default LocalizedStringsContext.Consumer\n","import React from 'react'\nimport LocalizedStringsConsumer from './LocalizedStringsConsumer'\n\nfunction withLocalizedStrings(Component) {\n  return function(props) {\n    return (\n      <LocalizedStringsConsumer>\n        {({ localizedStrings }) => (\n          <Component {...props} localizedStrings={localizedStrings} />\n        )}\n      </LocalizedStringsConsumer>\n    )\n  }\n}\n\nexport default withLocalizedStrings\n","import * as R from 'ramda'\n\nconst getLocalizedString = (strings, key) => {\n  if (!R.has(key, strings)) console.warn(`No localized string found for ${key}`)\n  return R.prop(key, strings)\n}\n\nexport default getLocalizedString\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ConnectionManager from 'containers/ConnectionManager'\nimport FlowView from 'containers/FlowView'\nimport connectionSelectors from 'redux/modules/connection/selectors'\nimport config from 'config'\nimport { withRouter, Route, Switch } from 'react-router-dom'\nimport { SocketConnection } from 'components/Websockets'\nimport FallbackState from 'components/FallbackState'\nimport ScrollbarSize from 'react-scrollbar-size'\nimport screenActions from 'redux/modules/screen/actions'\nimport screenSelectors from 'redux/modules/screen/selectors'\nimport manifestSelectors from 'redux/modules/manifest/selectors'\nimport artboardsSelectors from 'redux/modules/entities/artboards/selectors'\nimport { replace } from 'react-router-redux'\nimport LocalizedStringsProvider from 'containers/LocalizedStringsManager/LocalizedStringsProvider'\nimport withLocalizedStrings from 'containers/LocalizedStringsManager/withLocalizedStrings'\nimport getLocalizedString from 'utils/getLocalizedString'\nimport * as R from 'ramda'\nimport { withProps } from 'recompose'\n\nconst NoArtboardsFallbackState = R.compose(\n  withLocalizedStrings,\n  withProps(({ localizedStrings }) => ({\n    title: getLocalizedString(localizedStrings, 'NO_ARTBOARDS_TITLE'),\n    message: getLocalizedString(localizedStrings, 'NO_ARTBOARDS_MESSAGE'),\n    iconType: 'artboard'\n  }))\n)(FallbackState)\n\nconst ConnectionErrorFallbackState = R.compose(\n  withLocalizedStrings,\n  withProps(({ localizedStrings }) => ({\n    title: getLocalizedString(localizedStrings, 'CONNECTION_ERROR_TITLE'),\n    message: getLocalizedString(localizedStrings, 'CONNECTION_ERROR_MESSAGE'),\n    iconType: 'warn'\n  }))\n)(FallbackState)\n\nconst mapStateToProps = (state, props) => ({\n  connectionIsReady: connectionSelectors.getConnectionIsReady(state),\n  isScrollbarDimensionsSet: screenSelectors.getIsScrollbarDimensionsSet(state),\n  manifestIsSet: manifestSelectors.getManifestIsSet(state),\n  documentContainsArtboards: artboardsSelectors.getArtboards(state).length > 0\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setScrollbarDimensions: measurements =>\n    dispatch(\n      screenActions.setScrollbarDimensions({\n        width: measurements.scrollbarWidth,\n        height: measurements.scrollbarHeight\n      })\n    ),\n  goToConnectionError: () => dispatch(replace('/state/connection-error'))\n})\n\nclass App extends Component {\n  render() {\n    const {\n      connectionIsReady,\n      setScrollbarDimensions,\n      isScrollbarDimensionsSet,\n      goToConnectionError,\n      manifestIsSet,\n      documentContainsArtboards\n    } = this.props\n\n    return (\n      <LocalizedStringsProvider>\n        <SocketConnection uri={config.socketUri}>\n          <div>\n            <ConnectionManager handleError={goToConnectionError} />\n            <ScrollbarSize onLoad={setScrollbarDimensions} />\n            {connectionIsReady ? (\n              isScrollbarDimensionsSet &&\n              manifestIsSet && (\n                <Switch>\n                  {documentContainsArtboards && (\n                    <Route path=\"/:artboardId\" component={FlowView} />\n                  )}\n                  <Route\n                    render={() => (\n                      <NoArtboardsFallbackState width=\"100vw\" height=\"100vh\" />\n                    )}\n                  />\n                </Switch>\n              )\n            ) : (\n              <Switch>\n                <Route\n                  path=\"/state/connection-error\"\n                  render={() => (\n                    <ConnectionErrorFallbackState\n                      width=\"100vw\"\n                      height=\"100vh\"\n                    />\n                  )}\n                />\n              </Switch>\n            )}\n          </div>\n        </SocketConnection>\n      </LocalizedStringsProvider>\n    )\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n)\n","import { injectGlobal } from 'styled-components'\n\ninjectGlobal`\n  body {\n    overflow: hidden; // block body scrolling\n    background-color: #000;\n    color: #fff;\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    margin: 0;\n  }\n`\n","import './polyfills'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\nimport { ConnectedRouter } from 'react-router-redux'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from 'redux/configureStore'\nimport App from 'containers/App'\nimport './globalStyles'\nimport initGlobalProperties from 'globalProperties'\n\nif (process.env.REACT_APP_COMMIT_HASH) {\n  window.__RELEASE_INFO = {\n    commit: process.env.REACT_APP_COMMIT_HASH\n  }\n}\n\nconst getHistoryState = () => window.history.state || {}\nconst keyLength = 6\nconst createKey = () =>\n  Math.random()\n    .toString(36)\n    .substr(2, keyLength)\n\n// This is necessary because the initial location.key might be undefined\n// We need this key to map it to a scroll position for scroll restoration\nconst initialHistoryState = getHistoryState()\nif (!initialHistoryState.key) {\n  const newState = Object.assign({}, getHistoryState(), { key: createKey() })\n  window.history.replaceState(newState, null, window.location.href)\n}\n\nconst history = createBrowserHistory()\nconst store = configureStore({ history })\n\ninitGlobalProperties(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { GLOBAL_PROPERTY_NAMESPACE } from 'constants/globals'\nimport { actions as artboardActions } from 'redux/modules/entities/artboards'\nimport isUUID from 'is-uuid'\n\nexport default store => {\n  window[GLOBAL_PROPERTY_NAMESPACE] = {\n    goToArtboard: artboardId =>\n      isUUID.anyNonNil(artboardId) &&\n      store.dispatch(artboardActions.setCurrentArtboard(artboardId)),\n    getSessionId: () => window.localStorage.getItem('uuid'),\n    // This function will be overridden by the LocalizedStringProvider\n    setLocalizedStrings: obj => {\n      console.warn(\"LocalizedStringProvider isn't initialized\")\n    },\n    // This function will be overridden by the AddGlobalTransitionToArtboardHandler\n    transitionToArtboard: () => {\n      console.warn(\"AddGlobalTransitionToArtboardHandler isn't initialized\")\n    }\n  }\n}\n"],"sourceRoot":""}